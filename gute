#!/usr/bin/env escript

conf() ->
    "gute.conf".

main(Args) ->
    [Path | _] = Args,
    update_all_files(Path).

file_tree(Path) ->
    Result = filelib:wildcard("**/*", Path),
    FullPathResult = lists:map(fun (File) ->
                                       filename:join(Path, File)
                               end, Result),
    ResultNoDir = lists:filter(fun (X) ->
                                       (not filelib:is_dir(X)) and not is_conf(X)
                               end, FullPathResult),
    io:format("Files ~p~n", [ResultNoDir]),
    lists:delete(conf(), ResultNoDir).

update_all_files(Path) ->
    Files = file_tree(Path),
    {ok, Patterns} = file:consult(filename:join(Path, conf())),
    PatternValues = user_values(Patterns),
    lists:foreach(
      fun (File) ->
              update(File, PatternValues)
      end,
      Files).

user_values(Patterns) ->
    lists:foldl(
      fun ({Pattern, Message}, Acc) ->
              {ok, [Value]} = io:fread(Message, "~s"),
              [{Pattern, Value} | Acc]
      end,
      [],
      Patterns).

update(File, Patterns) ->
    lists:foreach(
      fun ({Variable, Value}) ->
              BValue = erlang:list_to_binary(Value),
              render(File, Variable, BValue)
      end, Patterns).

render(File, Variable, Value) ->
    {ok, Content} = file:read_file(File),
    NewContent = binary:replace(Content, Variable, Value, [global]),
    file:write_file(File, NewContent).

is_conf(Path) ->
    case re:run(Path, [".*", conf(), ".*"]) of
        nomatch ->
            false;
        _ ->
            true
    end.
